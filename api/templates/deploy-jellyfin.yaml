metadata:
  id: "deploy-jellyfin"
  name: "Jellyfin"
  description: "Jellyfin is a free and open-source media server software that allows you to manage and stream your media content."
  author: "Nixopus Team"
  icon: "ðŸ“º"
  category: "Containers"
  type: "install"
  version: "1.0.0"
  isVerified: true

variables:
  image:
    type: "string"
    description: "Docker image for Jellyfin"
    default: "jellyfin/jellyfin"
    is_required: true

  tag:
    type: "string"
    description: "Docker image tag"
    default: "latest"
    is_required: true

  container_name:
    type: "string"
    description: "Name of the container"
    default: "jellyfin"
    is_required: true

  host_port:
    type: "integer"
    description: "Host port to expose"
    default: 8096
    is_required: true

  container_port:
    type: "integer"
    description: "Container port to map"
    default: 8096
    is_required: true

  media_dir:
    type: "string"
    description: "Directory containing media files"
    default: "/path/to/media"
    is_required: true

  config_dir:
    type: "string"
    description: "Directory for Jellyfin configuration"
    default: "/path/to/config"
    is_required: true

  cache_dir:
    type: "string"
    description: "Directory for Jellyfin cache"
    default: "/path/to/cache"
    is_required: true

execution:
  run:
    - name: "Pull Jellyfin image"
      type: "docker"
      properties:
        action: "pull"
        image: "{{ image }}"
        tag: "{{ tag }}"
      timeout: 300

    - name: "Run Jellyfin container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "{{ image }}"
        tag: "{{ tag }}"
        ports: "{{ host_port }}:{{ container_port }}"
        volumes:
          - "{{ config_dir }}:/config"
          - "{{ cache_dir }}:/cache"
          - "{{ media_dir }}:/media"
        restart: "unless-stopped"
      timeout: 120

  # validate:
  #   - name: "Check HTTP response from Jellyfin"
  #     type: "command"
  #     properties:
  #       cmd: "curl -fsS -o /dev/null -w '%{http_code}\n' http://localhost:{{ host_port }} | grep -E '^(200|301|302)$'"
  #     timeout: 60
